devtools::document()
devtools::check()
devtools::check()
devtools::check()
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case1.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case2.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case3.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case4.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case5.rda")
?usethis::use_data
usethis::use_data(Case1)
usethis::use_data(Case1, Case 1)
usethis::use_data(Case1, Case2)
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case6.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case7.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case8.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case9.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case10.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case11.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case12.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case13.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case14.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case15.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case16.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case17.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case18.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case19.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case20.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case21.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case22.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case23.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case24.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case25.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case26.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case27.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case28.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case29.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case30.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case31.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case32.rda")
load("E:/Dropbox/Research/postdoc/UNBIAS/seasonalclumped/data/Case33.rda")
usethis::use_data(Case1, Case2, Case3, Case4, Case5, Case6, Case7, Case8, Case9, Case11, Case12, Case13, Case14, Case15, Case16, Case17, Case18, Case19, Case21, Case22, Case23, Case24, Case25, Case26, Case27, Case28, Case29, Case30, Case31, Case32, Case33)
usethis::use_data(Case1, overwrite = TRUE)
require(seasonalclumped)
test <- seasonalclumped::Case1
rm(list=ls())
test <- seasonalclumped::Case1
View(test)
?rnorm
?which.max
devtools::document()
devtools::document()
warnings()
devtools::document()
devtools::document()
devtools::install()
require(xlsx)
setwd("E:/Dropbox/Research/postdoc/Side projects/Bivalve photosymbiosis and gigantism/Pectinids_Lukas")
?read.xlsx
Out <- read.xlsx("Laminae_counting_comparison.xlsx", sheetName = "Out")
View(Out)
summary(Out)
str(Out)
Cross <- read.xlsx("Laminae_counting_comparison.xlsx", sheetName = "Cross")
View(Cross)
require(ggplot2)
colnames(Out) <- colnames(Cross) <- "Day"
Out <- read.xlsx("Laminae_counting_comparison.xlsx", sheetName = "Out")
Cross <- read.xlsx("Laminae_counting_comparison.xlsx", sheetName = "Cross")
colnames(Out)[1] <- colnames(Cross)[1] <- "Day"
Fig_age_models <- ggplot(Out, aes(Day, Shell2A)) +
geom_point(size = 0.5, alpha = 0.5, aes(color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.5, aes(color = "Shell2"))
x11(); plot(Fig_age_models)
Fig_age_models <- ggplot(Out, aes(Day, Shell2A)) +
geom_point(size = 0.5, alpha = 0.5, aes(color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.5, aes(color = "Shell2")) +
geom_point(size = 0.5, alpha = 0.5, aes(y = Shell2B, color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.5, aes(y = Shell2B, color = "Shell2")) +
Fig_age_models <- ggplot(Out, aes(Day, Shell2A)) +
geom_point(size = 0.5, alpha = 0.5, aes(color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.5, aes(color = "Shell2")) +
geom_point(size = 0.5, alpha = 0.5, aes(y = Shell2B, color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.5, aes(y = Shell2B, color = "Shell2"))
x11(); plot(Fig_age_models)
Fig_age_models <- ggplot(Out, aes(Day, Shell2A)) +
geom_point(size = 0.5, alpha = 0.5, aes(color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.5, aes(color = "Shell2")) +
geom_point(size = 0.5, alpha = 0.5, aes(y = Shell2B, color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.5, aes(y = Shell2B, color = "Shell2")) +
geom_point(size = 0.5, alpha = 0.5, aes(y = Shell2C, color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.5, aes(y = Shell2C, color = "Shell2")) +
geom_point(size = 0.5, alpha = 0.5, aes(y = Shell2D, color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.5, aes(y = Shell2D, color = "Shell2")) +
geom_point(size = 0.5, alpha = 0.5, aes(y = Shell3A, color = "Shell3")) +
geom_line(size = 0.5, alpha = 0.5, aes(y = Shell3A, color = "Shell3")) +
geom_point(size = 0.5, alpha = 0.5, aes(y = Shell3B, color = "Shell3")) +
geom_line(size = 0.5, alpha = 0.5, aes(y = Shell3B, color = "Shell3")) +
geom_point(size = 0.5, alpha = 0.5, aes(y = Shell3C, color = "Shell3")) +
geom_line(size = 0.5, alpha = 0.5, aes(y = Shell3C, color = "Shell3")) +
geom_point(size = 0.5, alpha = 0.5, aes(y = Shell4A, color = "Shell4")) +
geom_line(size = 0.5, alpha = 0.5, aes(y = Shell4A, color = "Shell4")) +
geom_point(size = 0.5, alpha = 0.5, aes(y = Shell4B, color = "Shell4")) +
geom_line(size = 0.5, alpha = 0.5, aes(y = Shell4B, color = "Shell4"))
x11(); plot(Fig_age_models)
Fig_age_models <- ggplot(Out, aes(Day, Shell2A)) +
geom_point(size = 0.5, alpha = 0.2, aes(color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.2, aes(color = "Shell2")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell2B, color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell2B, color = "Shell2")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell2C, color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell2C, color = "Shell2")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell2D, color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell2D, color = "Shell2")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell3A, color = "Shell3")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell3A, color = "Shell3")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell3B, color = "Shell3")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell3B, color = "Shell3")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell3C, color = "Shell3")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell3C, color = "Shell3")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell4A, color = "Shell4")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell4A, color = "Shell4")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell4B, color = "Shell4")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell4B, color = "Shell4"))
x11(); plot(Fig_age_models)
Fig_age_models <- ggplot(Out, aes(Day, Shell2A)) + # Data from outside of the shell
geom_point(size = 0.5, alpha = 0.2, aes(color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.2, aes(color = "Shell2")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell2B, color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell2B, color = "Shell2")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell2C, color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell2C, color = "Shell2")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell2D, color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell2D, color = "Shell2")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell3A, color = "Shell3")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell3A, color = "Shell3")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell3B, color = "Shell3")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell3B, color = "Shell3")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell3C, color = "Shell3")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell3C, color = "Shell3")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell4A, color = "Shell4")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell4A, color = "Shell4")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell4B, color = "Shell4")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell4B, color = "Shell4")) +
# Data from cross sections
geom_point(data = Cross, size = 0.5, aes(x = Day, y = Shell2_1A, color = "Shell2")) +
geom_line(data = Cross, size = 0.5, aes(x = Day, y = Shell2_1A, color = "Shell2")) +
geom_point(data = Cross, size = 0.5, aes(x = Day, y = Shell2_1B, color = "Shell2")) +
geom_line(data = Cross, size = 0.5, aes(x = Day, y = Shell2_1B, color = "Shell2")) +
geom_point(data = Cross, size = 0.5, aes(x = Day, y = Shell2_2, color = "Shell2")) +
geom_line(data = Cross, size = 0.5, aes(x = Day, y = Shell2_2, color = "Shell2")) +
geom_point(data = Cross, size = 0.5, aes(x = Day, y = Shell3_1A, color = "Shell3")) +
geom_line(data = Cross, size = 0.5, aes(x = Day, y = Shell3_1A, color = "Shell3")) +
geom_point(data = Cross, size = 0.5, aes(x = Day, y = Shell3_1B, color = "Shell3")) +
geom_line(data = Cross, size = 0.5, aes(x = Day, y = Shell3_1B, color = "Shell3")) +
geom_point(data = Cross, size = 0.5, aes(x = Day, y = Shell3_2, color = "Shell3")) +
geom_line(data = Cross, size = 0.5, aes(x = Day, y = Shell3_2, color = "Shell3")) +
geom_point(data = Cross, size = 0.5, aes(x = Day, y = Shell4, color = "Shell4")) +
geom_line(data = Cross, size = 0.5, aes(x = Day, y = Shell4, color = "Shell4"))
x11(); plot(Fig_age_models)
usethis::use_travis()
usethis::use_travis()
??rhub
require(rhub)
validate_email()
devtools::check_rhub(pkg = "seasonalclumped", platforms = c("debian-gcc-devel", "macos-elcapitan-release", "windows-x86_64-devel"), email = TRUE)
devtools::check_rhub(platforms = c("debian-gcc-devel", "macos-elcapitan-release", "windows-x86_64-devel"), email = TRUE)
devtools::check_rhub()
devtools::document()
devtools::check_rhub()
devtools::check_rhub()
devtools::document()
devtools::document()
devtools::document()
devtools::check_rhub()
devtools::document()
?rhub_builder
??rhub
rhub::platforms()
devtools::check_rhub(platforms = "ubuntu-gcc-release")
devtools::check_rhub()
?devtools::check()
devtools::document()
devtools::build_manual()
devtools::build_manual()
devtools::document()
devtools::build_manual()
devtools::document()
devtools::document()
devtools::build_manual()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::install()
devtools::build_manual()
devtools::document()
devtools::build_manual()
devtools::document()
devtools::build_manual()
devtools::install()
devtools::check("--as-cran")
devtools::check()
devtools::document()
devtools::install()
devtools::release()
devtools::spell_check()
devtools::release()
# Create figures to compare laminae-counting based age models
require(xlsx)
require(ggplot2)
setwd("E:/Dropbox/Research/postdoc/Side projects/Bivalve photosymbiosis and gigantism/Pectinids_Lukas")
Out <- read.xlsx("Laminae_counting_comparison.xlsx", sheetName = "Out_rescale")
Cross <- read.xlsx("Laminae_counting_comparison.xlsx", sheetName = "Cross_rescale")
colnames(Out)[1] <- colnames(Cross)[1] <- "Day"
Fig_age_models <- ggplot(Out, aes(Day, Shell2A)) + # Data from outside of the shell
geom_point(size = 0.5, alpha = 0.2, aes(color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.2, aes(color = "Shell2")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell2B, color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell2B, color = "Shell2")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell2C, color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell2C, color = "Shell2")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell2D, color = "Shell2")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell2D, color = "Shell2")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell3A, color = "Shell3")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell3A, color = "Shell3")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell3B, color = "Shell3")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell3B, color = "Shell3")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell3C, color = "Shell3")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell3C, color = "Shell3")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell4A, color = "Shell4")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell4A, color = "Shell4")) +
geom_point(size = 0.5, alpha = 0.2, aes(y = Shell4B, color = "Shell4")) +
geom_line(size = 0.5, alpha = 0.2, aes(y = Shell4B, color = "Shell4")) +
# Data from cross sections
geom_point(data = Cross, size = 0.5, aes(x = Day, y = Shell2_1A, color = "Shell2")) +
geom_line(data = Cross, size = 0.5, aes(x = Day, y = Shell2_1A, color = "Shell2")) +
geom_point(data = Cross, size = 0.5, aes(x = Day, y = Shell2_1B, color = "Shell2")) +
geom_line(data = Cross, size = 0.5, aes(x = Day, y = Shell2_1B, color = "Shell2")) +
geom_point(data = Cross, size = 0.5, aes(x = Day, y = Shell2_2, color = "Shell2")) +
geom_line(data = Cross, size = 0.5, aes(x = Day, y = Shell2_2, color = "Shell2")) +
geom_point(data = Cross, size = 0.5, aes(x = Day, y = Shell3_1A, color = "Shell3")) +
geom_line(data = Cross, size = 0.5, aes(x = Day, y = Shell3_1A, color = "Shell3")) +
geom_point(data = Cross, size = 0.5, aes(x = Day, y = Shell3_1B, color = "Shell3")) +
geom_line(data = Cross, size = 0.5, aes(x = Day, y = Shell3_1B, color = "Shell3")) +
geom_point(data = Cross, size = 0.5, aes(x = Day, y = Shell3_2, color = "Shell3")) +
geom_line(data = Cross, size = 0.5, aes(x = Day, y = Shell3_2, color = "Shell3")) +
geom_point(data = Cross, size = 0.5, aes(x = Day, y = Shell4, color = "Shell4")) +
geom_line(data = Cross, size = 0.5, aes(x = Day, y = Shell4, color = "Shell4"))
pdf("Fig_laminae_age_models_rescale.pdf")
plot(Fig_age_models)
dev.off()
